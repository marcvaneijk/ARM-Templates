{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VMs"
            },
            "defaultValue": "vmadmin"
        },
        "sshPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "The public key of the SSH keypair"
            }
        },
        "artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/marcvaneijk/arm-templates/main/54-k8s-disconnected-initialize/",
            "metadata": {
                "description": "Location of templates, scripts and other artifacts"
            }
        }
    },
    "variables": {
        "names": {
            "storage":"[concat('init',uniqueString(resourceGroup().id))]",
            "vNet": "init-vnet",
            "subnet": "init-subnet",
            "nsg": "init-nsg",
            "pubIp": "init-pubip",
            "vm": "init-vm"
        },
        "size": "Standard_F2s_v2"
    },
    "resources": [
        {
            "name": "[variables('names').storage]",
            "type": "Microsoft.Storage/storageAccounts",
            "location":"[resourceGroup().location]",
            "sku":{
                "name":"Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[variables('names').nsg]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('names').pubIp]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[variables('names').vNet]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('names').nsg]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('names').subnet]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('names').vm, '-vnic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('names').vNet]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('names').vNet),'/subnets/',variables('names').subnet)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('names').pubIp)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('names').nsg)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('names').vm]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('names').vm, '-vnic'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('names').storage)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('size')]"
                },
                "osProfile": {
                    "computerName": "[variables('names').vm]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('names').vm,'-osdisk')]",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('names').storage)).primaryEndpoints.blob, 'vhds/osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('names').vm, '-vnic'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('names').vm, '/config')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('names').vm]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(parameters('artifactsLocation'),'scripts/initialize.sh')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('/bin/bash initialize.sh ', parameters('adminUsername'), ' ', parameters('artifactsLocation'))]"
                }
            }
        }        
    ],
    "outputs": {
    }
}